From ed44db8a1fb377e97d80e3dd96337e5b5cff688f Mon Sep 17 00:00:00 2001
From: Diane Perez <diane.perez@epfl.ch>
Date: Mon, 4 Sep 2017 11:29:13 +0200
Subject: [PATCH 1/3] NIFTI format extension: modifications to Inferrer and
 Executor

---
 executor/src/main/scala/raw/executor/spark/Executor.scala | 4 ++++
 executor/src/main/scala/raw/inferrer/Inferrer.scala       | 6 ++++++
 2 files changed, 10 insertions(+)

diff --git a/executor/src/main/scala/raw/executor/spark/Executor.scala b/executor/src/main/scala/raw/executor/spark/Executor.scala
index 349970ac3..513966af5 100644
--- a/executor/src/main/scala/raw/executor/spark/Executor.scala
+++ b/executor/src/main/scala/raw/executor/spark/Executor.scala
@@ -17,12 +17,14 @@ import raw.executor.spark.inputformats.json.JsonFormatCodeGenBuilder
 import raw.executor.spark.inputformats.parquet.ParquetFormatCodeGenBuilder
 import raw.executor.spark.inputformats.text.TextFormatCodeGenBuilder
 import raw.executor.spark.inputformats.xml.XmlFormatCodeGenBuilder
+import raw.executor.spark.inputformats.nifti.NiftiFormatCodeGenBuilder
 import raw.hadoop.Hadoop
 import raw.inputformats.InputFormatDescriptor
 import raw.inputformats.csv.CsvInputFormatDescriptor
 import raw.inputformats.hjson.HjsonInputFormatDescriptor
 import raw.inputformats.iis.IISInputFormatDescriptor
 import raw.inputformats.json.JsonInputFormatDescriptor
+import raw.inputformats.nifti.NiftiInputFormatDescriptor
 import raw.inputformats.parquet.ParquetInputFormatDescriptor
 import raw.inputformats.text.TextInputFormatDescriptor
 import raw.inputformats.xml.XmlInputFormatDescriptor
@@ -175,6 +177,7 @@ class ExpressionBuilder(val queryContext: QueryContext, val analyzer: SemanticAn
       case TextInputFormatDescriptor(_, _) => TextFormatCodeGenBuilder.buildCodeForDropbox(format, projectedType, fullType, maybeColumns, maybePredicate)
       case ParquetInputFormatDescriptor() => ???
       case XmlInputFormatDescriptor(_) => XmlFormatCodeGenBuilder.buildCodeForDropbox(format, projectedType, fullType, maybeColumns, maybePredicate)
+      case NiftiInputFormatDescriptor(_) => ??? // TODO: test NiftiFormatCodeGenBuilder.buildCodeForDropbox(format, projectedType, fullType, maybeColumns, maybePredicate)
     }
   }
 
@@ -187,6 +190,7 @@ class ExpressionBuilder(val queryContext: QueryContext, val analyzer: SemanticAn
       case TextInputFormatDescriptor(_, _) => TextFormatCodeGenBuilder.buildCode(format, projectedType, fullType, maybeColumns, maybePredicate)
       case ParquetInputFormatDescriptor() => ParquetFormatCodeGenBuilder.buildCode(format, projectedType, fullType, maybeColumns, maybePredicate)
       case XmlInputFormatDescriptor(_) => XmlFormatCodeGenBuilder.buildCode(format, projectedType, fullType, maybeColumns, maybePredicate)
+      case NiftiInputFormatDescriptor(_) => NiftiFormatCodeGenBuilder.buildCode(format, projectedType, fullType, maybeColumns, maybePredicate)
     }
   }
 
diff --git a/executor/src/main/scala/raw/inferrer/Inferrer.scala b/executor/src/main/scala/raw/inferrer/Inferrer.scala
index 8e5a830d4..41396a763 100644
--- a/executor/src/main/scala/raw/inferrer/Inferrer.scala
+++ b/executor/src/main/scala/raw/inferrer/Inferrer.scala
@@ -23,6 +23,7 @@ import raw.inputformats.hjson.HjsonInputFormatHint
 import raw.inputformats.iis.IISInputFormatHint
 import raw.inputformats.json.JsonInputFormatHint
 import raw.inputformats.parquet.ParquetInputFormatHint
+import raw.inputformats.nifti.{NiftiInferrer, NiftiInputFormatHint}
 import raw.inputformats.text.{TextInputFormatDescriptor, TextInputFormatHint}
 import raw.inputformats.xml.XmlInputFormatHint
 import raw.inputformats.{Encoding, InputFormatDescriptor, _}
@@ -86,6 +87,8 @@ object Inferrer extends StrictLogging {
                   case Some(dfh@XmlInputFormatHint(encoding)) =>
                     val textSample = getTextSample(locationManager, location, sampleSize, encoding)
                     Right(XmlInferrer.infer(textSample, dfh))
+                  case Some(dfh@NiftiInputFormatHint(little_endian, datatype, bitpix, nDim)) =>
+                    Right(NiftiInferrer.infer(locationManager, client, settings, location))
                   case Some(dfh@ParquetInputFormatHint()) =>
                     Right(ParquetInferrer.infer(client, settings, location))
                   case Some(dfh) =>
@@ -100,6 +103,9 @@ object Inferrer extends StrictLogging {
                     }
                     if (files.head.rawUri.endsWith(".parquet")) {
                       Right(ParquetInferrer.infer(client, settings, location))
+                    }
+                    if (files.head.rawUri.endsWith(".nii") || files.head.rawUri.endsWith(".gz")) {
+                      Right(NiftiInferrer.infer(locationManager, client, settings, location))
                     } else {
                       // Obtain a text sample (assume its text) and then try json, hjson, iis, xml.
                       val textSample = getTextSample(locationManager, location, sampleSize, None)
-- 
2.11.0 (Apple Git-81)

